name: CI Workflow

on:
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - master
env:
  AZURE_RESOURCEGROUP_NAME: "rg-aa-github-deployment"
  AZURE_WEBAPP_NAME: "as-github-cd-aa"
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - run: |
        npm install
        npm run build
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: webpack artifact
        path: public/
      
  test:
    needs: [build]
    strategy:
      matrix:
        node-version: [10.x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: webpack artifact
          path: public/
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, test
        run: |
          npm install
          npm test
        env:
          CI: true
        
  stg-deployment:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: webpack artifact
          path: public/
      - name: Create Github Deployment
        id: deployment
        uses: chrnorm/deployment-action@v1.2.0
        with:
          token: ${{ github.token }}
          ref: ${{ github.event.client_payload.pull_request.head.sha }}
          environment: staging
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - run: |
          az group create -n ${{ env.AZURE_RESOURCEGROUP_NAME }} -l australiasoutheast 
          az deployment group create -n ghaction -g ${{ env.AZURE_RESOURCEGROUP_NAME }} --template-file deployment/azuredeploy.json
      - run: |
          az webapp deployment slot create --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} --slot staging
      - run: |
          mkdir published
          cp *.html published/
          cp -r public published/
      - name: 'Azure webapp deploy'
        id: appsvc-deployment
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: staging
          package: 'published/' 
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target-url: ${{ steps.appsvc-deployment.outputs.webapp-url }}
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: logout
        run: |
          az logout
